/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.3.0                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application     simpleFoam;

startFrom       startTime;

startTime       0;

stopAt          endTime;

endTime         .5;

deltaT          0.005;

writeControl    runTime;

writeInterval   0.05;

purgeWrite      0;

writeFormat     ascii;

writePrecision  6;

writeCompression off;

timeFormat      general;

timePrecision   6;

runTimeModifiable true;

//adjustTimeStep          yes;

//MaxCo		0.5;

functions
{
    forces
    {
        type forces;              // use the forces class
        functionObjectLibs ("libforces.so"); // "plugin" library to load
        patches (subBoundary); // Name of patches to integrate forces
        //outputControl outputTime; // When to write the output
        writeControl    runTime;
        writeInterval   0.05;
        rho rhoInf;           // Name of the reference density
        rhoInf 1.0;               // Reference density for fluid
        CofR (0.33333 0 0);       // Origin for moment calculations
    }
    forceCoeffs
    {
        type forceCoeffs;     // compute force-coefficients
        functionObjectLibs ("libforces.so");
        patches (subBoundary);
        //outputControl outputTime;
        writeControl    runTime;
        writeInterval   0.05;
        rho rhoInf;
        rhoInf 1.0;
        CofR (0.33333 0 0);
        liftDir (0 1 0);      // lift direction (parallel to U_inf)
        dragDir (1 0 0);      // drag direction (normal to U_inf)
        pitchAxis (0 0 1);    // rotational moment axis
        magUInf 1;            // magnitude of U_inf (for normalization)
        lRef 1.0;             // reference length
        Aref 1.0;             // reference area
    }
};
        


// ************************************************************************* //
